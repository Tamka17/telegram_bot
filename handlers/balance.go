// handlers/balance.go
package handlers

import (
	"context"
	"fmt"
	"log"
	"telegram_bot/models"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func (h *Handler) ShowBalance(ctx context.Context, chatID int64, telegramID int64) {
	var balance float64
	err := h.DB.QueryRowContext(ctx, "SELECT balance FROM users WHERE telegram_id=$1", telegramID).Scan(&balance)
	if err != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:", err)
		msg := tgbotapi.NewMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å.")
		h.Bot.Send(msg)
		return
	}

	msg := tgbotapi.NewMessage(chatID, fmt.Sprintf("–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: %.2f —Ä—É–±.", balance))
	h.Bot.Send(msg)
}

func (h *Handler) HandleBalanceCommand(ctx context.Context, update tgbotapi.Update) {
	telegramID := update.Message.From.ID
	chatID := update.Message.Chat.ID
	h.ShowBalance(ctx, chatID, telegramID)
}

func (h *Handler) HandleWithdrawRequest(ctx context.Context, update tgbotapi.Update) {
	userID := update.Message.From.ID

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	user, err := h.DB.GetUserByTelegramID(ctx, userID)
	if err != nil || user.Balance <= 0 {
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞.")
		h.Bot.Send(msg)
		return
	}

	// –ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤.")
	h.Bot.Send(msg)

	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	h.DB.SetUserState(ctx, userID, string(models.StateAwaitingCardNumder))
}

func (h *Handler) HandleCardNumberReceived(ctx context.Context, update tgbotapi.Update) {
	userID := update.Message.From.ID
	cardNumber := update.Message.Text

	// –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
	// ...

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	user, err := h.DB.GetUserByTelegramID(ctx, userID)
	if err != nil {
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		h.Bot.Send(msg)
		return
	}

	if user.Balance <= 400 {
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞.")
		h.Bot.Send(msg)
		return
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—É
	adminMessage := fmt.Sprintf(
		"üì• *–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤*\n\n"+
			"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* %d\n"+
			"üí∞ *–°—É–º–º–∞:* %.2f —Ä—É–±.\n"+
			"üí≥ *–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:* %s",
		userID,
		user.Balance,
		cardNumber,
	)
	adminMsg := tgbotapi.NewMessage(7113548539, adminMessage)
	adminMsg.ParseMode = "Markdown"
	h.Bot.Send(adminMsg)

	// –û–±–Ω—É–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	err = h.DB.SetUserBalance(ctx, userID, 0)
	if err != nil {
		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω—É–ª–∏—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É.")
		h.Bot.Send(msg)
		return
	}

	// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	h.DB.SetUserState(ctx, userID, string(models.StateNone))

	// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
	h.Bot.Send(msg)
}
