// handlers/auth.go
package handlers

import (
	"context"
	"database/sql"
	"fmt"
	"log"
	"telegram_bot/database"
	"telegram_bot/models"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type Handler struct {
	Bot           *tgbotapi.BotAPI
	DB            database.DBInterface
	AdminMenu     tgbotapi.ReplyKeyboardMarkup
	Keyboard      tgbotapi.ReplyKeyboardMarkup
	AdminMenuTask tgbotapi.ReplyKeyboardMarkup
	KeyboardTask  tgbotapi.ReplyKeyboardMarkup
}

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è Handler
func NewHandler(bot *tgbotapi.BotAPI, db database.DBInterface, admins map[int64]bool) *Handler {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –º–µ–Ω—é –∑–∞–¥–∞—á
	adminMenuTask := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton(string(models.CategoryAvito)),
			tgbotapi.NewKeyboardButton(string(models.CategoryYandex)),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton(string(models.CategoryGoogle)),
			tgbotapi.NewKeyboardButton(string(models.Category2GIS)),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ"),
		),
	)
	return &Handler{
		Bot:           bot,
		DB:            db,
		AdminMenuTask: adminMenuTask,
	}
}

func (h *Handler) Start(ctx context.Context, update tgbotapi.Update) {
	telegramUser := update.Message.From
	chatID := update.Message.Chat.ID

	// –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	var user models.User
	err := h.DB.QueryRowContext(ctx, "SELECT id, telegram_id, admin FROM users WHERE telegram_id=$1", telegramUser.ID).
		Scan(&user.ID, &user.TelegramID, &user.Admin)
	if err != nil {
		if err == sql.ErrNoRows {
			// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
			_, err = h.DB.ExecContext(ctx, "INSERT INTO users (telegram_id, username, admin) VALUES ($1, $2, $3)", telegramUser.ID, telegramUser.UserName, false)
			if err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
				msg := tgbotapi.NewMessage(chatID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
				h.Bot.Send(msg)
				return
			}
			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ false
			user.Admin = false
		} else {
			// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", err)
			msg := tgbotapi.NewMessage(chatID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
			h.Bot.Send(msg)
			return
		}
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
	var UserMenu = tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"),
			tgbotapi.NewKeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞"),
			tgbotapi.NewKeyboardButton("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–í–∑—è—Ç—å –∑–∞–¥–∞–Ω–∏–µ"),
		),
	)

	AdminMenu := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ"),
			tgbotapi.NewKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è"),
		),
	)
	var msg tgbotapi.MessageConfig

	if user.Admin {
		msg = tgbotapi.NewMessage(chatID, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")
		msg.ReplyMarkup = AdminMenu
	} else {
		msg = tgbotapi.NewMessage(chatID, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
		msg.ReplyMarkup = UserMenu
	}

	h.Bot.Send(msg)
}

func (h *Handler) HandleSupport(ctx context.Context, update tgbotapi.Update) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ –∞–¥—Ä–µ—Å—É @support.")
	h.Bot.Send(msg)
}

func (h *Handler) HandleShowAccount(ctx context.Context, update tgbotapi.Update) {
	userID := update.Message.From.ID

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	user, err := h.DB.GetUserByTelegramID(ctx, userID)
	if err != nil {
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		h.Bot.Send(msg)
		return
	}

	// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
	referralLink := fmt.Sprintf("https://t.me/Co_Work_online_bot?start=%d", userID)

	// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
	referralCount, err := h.DB.GetUserReferralCount(ctx, userID)
	if err != nil {
		referralCount = 0
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
	completedTasks, err := h.DB.GetCompletedTasksCount(ctx, userID)
	if err != nil {
		completedTasks = 0
	}

	// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	accountInfo := fmt.Sprintf(
		"üìã *–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç*\n\n"+
			"üÜî *–í–∞—à ID:* %d\n"+
			"üí∞ *–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–µ–Ω–µ–≥:* %.2f —Ä—É–±.\n"+
			"‚úÖ *–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π:* %d\n"+
			"üîó *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n%s\n"+
			"üë• *–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:* %d",
		userID,
		user.Balance,
		completedTasks,
		referralLink,
		referralCount,
	)

	msg := tgbotapi.NewMessage(update.Message.Chat.ID, accountInfo)

	h.Bot.Send(msg)
}

// –î—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
